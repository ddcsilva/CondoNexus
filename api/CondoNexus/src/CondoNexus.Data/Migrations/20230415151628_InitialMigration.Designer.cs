// <auto-generated />
using System;
using CondoNexus.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CondoNexus.Data.Migrations
{
    [DbContext(typeof(CondoNexusContext))]
    [Migration("20230415151628_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CondoNexus.Business.Models.Condominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CND_ID");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CND_CNPJ");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("CND_DATA_FUNDACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CND_NOME");

                    b.Property<int>("NumeroAndares")
                        .HasColumnType("int")
                        .HasColumnName("CND_NUMERO_ANDARES");

                    b.Property<int>("NumeroBlocos")
                        .HasColumnType("int")
                        .HasColumnName("CND_NUMERO_BLOCOS");

                    b.Property<int>("NumeroUnidades")
                        .HasColumnType("int")
                        .HasColumnName("CND_NUMERO_UNIDADES");

                    b.HasKey("Id")
                        .HasName("PK_CND_ID");

                    b.ToTable("TB_CONDOMINIOS", (string)null);
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("END_ID");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("END_BAIRRO");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("END_CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("END_CIDADE");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("END_COMPLEMENTO");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CND_ID");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("END_ESTADO");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("END_LOGRADOURO");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("END_NUMERO");

                    b.HasKey("Id")
                        .HasName("PK_END_ID");

                    b.HasIndex("CondominioId")
                        .IsUnique();

                    b.ToTable("TB_ENDERECOS", (string)null);
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Morador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MRD_ID");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasColumnName("MRD_CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("MRD_DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MRD_EMAIL");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MRD_FOTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MRD_NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MRD_TELEFONE");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UND_ID");

                    b.HasKey("Id")
                        .HasName("PK_MRD_ID");

                    b.HasIndex("UnidadeId");

                    b.ToTable("TB_MORADORES", (string)null);
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UND_ID");

                    b.Property<int>("Andar")
                        .HasColumnType("int")
                        .HasColumnName("UND_ANDAR");

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UND_BLOCO");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CND_ID");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UND_NUMERO");

                    b.Property<int>("StatusResidencial")
                        .HasColumnType("int")
                        .HasColumnName("UND_STATUS_RESIDENCIAL");

                    b.HasKey("Id")
                        .HasName("PK_UND_ID");

                    b.HasIndex("CondominioId");

                    b.ToTable("TB_UNIDADES", (string)null);
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VCL_ID");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("VCL_ANO");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VCL_COR");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCL_MARCA");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VCL_MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(7)")
                        .HasColumnName("VCL_PLACA");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UND_ID");

                    b.HasKey("Id")
                        .HasName("PK_VCL_ID");

                    b.HasIndex("UnidadeId");

                    b.ToTable("TB_VEICULOS", (string)null);
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Endereco", b =>
                {
                    b.HasOne("CondoNexus.Business.Models.Condominio", "Condominio")
                        .WithOne("Endereco")
                        .HasForeignKey("CondoNexus.Business.Models.Endereco", "CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ENDERECOS_CONDOMINIOS");

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Morador", b =>
                {
                    b.HasOne("CondoNexus.Business.Models.Unidade", "Unidade")
                        .WithMany("Moradores")
                        .HasForeignKey("UnidadeId")
                        .IsRequired()
                        .HasConstraintName("FK_MORADORES_UNIDADES");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Unidade", b =>
                {
                    b.HasOne("CondoNexus.Business.Models.Condominio", "Condominio")
                        .WithMany("Unidades")
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UNIDADES_CONDOMINIOS");

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Veiculo", b =>
                {
                    b.HasOne("CondoNexus.Business.Models.Unidade", "Unidade")
                        .WithMany("Veiculos")
                        .HasForeignKey("UnidadeId")
                        .IsRequired()
                        .HasConstraintName("FK_Veiculo_Unidade");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Condominio", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("CondoNexus.Business.Models.Unidade", b =>
                {
                    b.Navigation("Moradores");

                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
